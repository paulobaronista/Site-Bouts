<?php

namespace DoctrineORMModule\Proxy\__CG__\Base\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BaseConteudo extends \Base\Entity\BaseConteudo implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'fotos', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'idconteudo', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'logo', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'descricao', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'src', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'submenu', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'menu');
        }

        return array('__isInitialized__', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'fotos', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'idconteudo', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'logo', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'descricao', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'src', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'submenu', '' . "\0" . 'Base\\Entity\\BaseConteudo' . "\0" . 'menu');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BaseConteudo $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdconteudo()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdconteudo();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdconteudo', array());

        return parent::getIdconteudo();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', array());

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescricao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescricao', array());

        return parent::getDescricao();
    }

    /**
     * {@inheritDoc}
     */
    public function getSrc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSrc', array());

        return parent::getSrc();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmenu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmenu', array());

        return parent::getSubmenu();
    }

    /**
     * {@inheritDoc}
     */
    public function getMenu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMenu', array());

        return parent::getMenu();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdconteudo($idconteudo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdconteudo', array($idconteudo));

        return parent::setIdconteudo($idconteudo);
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo($logo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', array($logo));

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function setDescricao($descricao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescricao', array($descricao));

        return parent::setDescricao($descricao);
    }

    /**
     * {@inheritDoc}
     */
    public function setSrc($src)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSrc', array($src));

        return parent::setSrc($src);
    }

    /**
     * {@inheritDoc}
     */
    public function setSubmenu($submenu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubmenu', array($submenu));

        return parent::setSubmenu($submenu);
    }

    /**
     * {@inheritDoc}
     */
    public function setMenu($menu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMenu', array($menu));

        return parent::setMenu($menu);
    }

    /**
     * {@inheritDoc}
     */
    public function getFotos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFotos', array());

        return parent::getFotos();
    }

    /**
     * {@inheritDoc}
     */
    public function setFotos($fotos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFotos', array($fotos));

        return parent::setFotos($fotos);
    }

}
